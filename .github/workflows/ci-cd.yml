name: CI/CD Workflow

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

  push:
    branches:
      - main

jobs:
  validate-pr:
    name: Validate Pull Request
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-west-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Retrieve API test configuration
        id: api-config
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-id: exoplanets-analyzer-api-url-test

      - name: Parse API test configuration
        run: |
          echo "BASE_URL=$(echo '${{ steps.api-config.outputs.secret }}' | jq -r '.BASE_URL')" >> $GITHUB_ENV
          echo "PATH_SEGMENT=$(echo '${{ steps.api-config.outputs.secret }}' | jq -r '.PATH_SEGMENT')" >> $GITHUB_ENV
          echo "ENDPOINT_EXOPLANETS=$(echo '${{ steps.api-config.outputs.secret }}' | jq -r '.ENDPOINT_EXOPLANETS')" >> $GITHUB_ENV

      - name: Run Tests
        run: |
          docker run --rm \
            -e BASE_API_URL=$BASE_URL \
            -e PATH_SEGMENT=$PATH_SEGMENT \
            -e ENDPOINT_EXOPLANETS=$ENDPOINT_EXOPLANETS \
            swift:6.0.3 swift test

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: validate-pr

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-west-1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Retrieve Docker credentials
        id: docker-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-id: docker-credentials

      - name: Parse Docker credentials
        run: |
          echo "DOCKER_USERNAME=$(echo '${{ steps.docker-secrets.outputs.secret }}' | jq -r '.USERNAME')" >> $GITHUB_ENV
          echo "DOCKER_PASSWORD=$(echo '${{ steps.docker-secrets.outputs.secret }}' | jq -r '.PASSWORD')" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build and Push Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: rpairo/exoplanets:latest