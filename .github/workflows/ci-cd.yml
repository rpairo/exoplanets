name: CI/CD Workflow

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

  push:
    branches:
      - main

jobs:
  validate-pr:
    name: Validate Pull Request
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Configure AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region us-west-1

      - name: Retrieve API test configuration
        id: get-secret
        run: |
          secret=$(aws secretsmanager get-secret-value --secret-id exoplanets-analyzer-api-url-test --query SecretString --output text)
          echo $secret | jq -r '.BASE_URL' > base_url.txt
          echo $secret | jq -r '.PATH_SEGMENT' > path_segment.txt
          echo $secret | jq -r '.ENDPOINT_EXOPLANETS' > endpoint.txt

      - name: Export Environment Variables
        run: |
          echo "BASE_URL=$(cat base_url.txt)" >> $GITHUB_ENV
          echo "PATH_SEGMENT=$(cat path_segment.txt)" >> $GITHUB_ENV
          echo "ENDPOINT_EXOPLANETS=$(cat endpoint.txt)" >> $GITHUB_ENV

      - name: Run Tests
        run: |
          docker run --rm \
            -e BASE_API_URL=$BASE_URL \
            -e PATH_SEGMENT=$PATH_SEGMENT \
            -e ENDPOINT_EXOPLANETS=$ENDPOINT_EXOPLANETS \
            swift:6.0.3 swift test

  build-and-push:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: validate-pr

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Retrieve Docker credentials
        id: docker-secrets
        uses: aws-actions/aws-secretsmanager-get-secrets@v2
        with:
          secret-ids: |
            USERNAME, docker-credentials
            PASSWORD, docker-credentials

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}

      - name: Build and Push Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          tags: rpairo/exoplanets:latest