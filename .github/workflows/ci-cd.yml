name: CI/CD Workflow

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

  push:
    branches:
      - main

jobs:
  validate-pr:
    name: Validate Pull Request
    runs-on: macos-latest

    steps:
      # 1. Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Instalar dependencias necesarias (incluye Docker)
      - name: Install Docker
        run: |
          brew install --cask docker
          open /Applications/Docker.app
          sleep 10  # Espera a que Docker se inicie

      # 3. Ejecutar los tests usando Swift
      - name: Run Tests
        run: swift test

  build-and-push:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    name: Build and Push Docker Image
    runs-on: macos-latest
    needs: validate-pr

    steps:
      # 1. Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Instalar Docker y configurar Buildx
      - name: Install and Configure Docker
        run: |
          brew install --cask docker
          open /Applications/Docker.app
          sleep 10  # Espera a que Docker se inicie
          docker buildx create --use --name mybuilder
          docker buildx inspect mybuilder --bootstrap

      # 3. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build and Push Multi-Arch Image
      - name: Build and Push Multi-Arch Image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file Dockerfile \
            --tag rpairo/exoplanets:latest \
            --push .