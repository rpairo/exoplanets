name: Fetch Exoplanets URLs

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true

jobs:
  fetch-urls-job:
    runs-on: ubuntu-latest

    outputs:
      base_url: ${{ steps.set-urls.outputs.base_url }}
      path_segment: ${{ steps.set-urls.outputs.path_segment }}
      endpoint_exoplanets: ${{ steps.set-urls.outputs.endpoint_exoplanets }}

    steps:
      - name: Retrieve Exoplanets URLs
        id: set-urls
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          api_secrets=$(aws secretsmanager get-secret-value \
            --secret-id exoplanets-analyzer-api-url-test \
            --query SecretString \
            --output text)

          BASE_URL=$(echo "$api_secrets" | jq -r '.BASE_URL')
          PATH_SEGMENT=$(echo "$api_secrets" | jq -r '.PATH_SEGMENT')
          ENDPOINT_EXOPLANETS=$(echo "$api_secrets" | jq -r '.ENDPOINT_EXOPLANETS')

          echo "::add-mask::$BASE_URL"
          echo "::add-mask::$PATH_SEGMENT"
          echo "::add-mask::$ENDPOINT_EXOPLANETS"

          # Definir outputs para otros jobs
          echo "base_url=$BASE_URL" >> "$GITHUB_OUTPUT"
          echo "path_segment=$PATH_SEGMENT" >> "$GITHUB_OUTPUT"
          echo "endpoint_exoplanets=$ENDPOINT_EXOPLANETS" >> "$GITHUB_OUTPUT"